package view;

import controller.ConnectDB;
import controller.DisplayPanel;
import model.User;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;

import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author xiaopu
 */
public class SignInPanel extends javax.swing.JPanel {

    /**
     * Creates new form SignUpPage
     * @param user
     */
    public SignInPanel(User user) {
        this.user = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        emailTextField = new javax.swing.JTextField();
        signInButton = new javax.swing.JButton();
        signUpButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1200, 750));
        setSize(new java.awt.Dimension(1200, 750));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Building Security and Fire Alarm System");

        emailLabel.setText("Email");

        passwordLabel.setText("password");

        passwordField.setText("jPasswordField1");

        emailTextField.setText("Email");

        signInButton.setText("Sign In");
        signInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInButtonActionPerformed(evt);
            }
        });

        signUpButton.setText("Sign Up");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(401, 401, 401)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(472, 472, 472)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(passwordLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(passwordField)
                                                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(464, 464, 464)
                                                .addComponent(signInButton)
                                                .addGap(49, 49, 49)
                                                .addComponent(signUpButton)))
                                .addContainerGap(453, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordLabel))
                                .addGap(142, 142, 142)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(signInButton)
                                        .addComponent(signUpButton))
                                .addContainerGap(199, Short.MAX_VALUE))
        );
    }// </editor-fold>

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        RegisterPage registerPage = new RegisterPage();
        registerPage.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        registerPage.setVisible(true);
    }

    private void signInButtonActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
        _connection = ConnectDB.getConnection();
        if(emailTextField.getText().length()==0) {
            // Checking for empty field
            JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
        } else if (passwordField.getPassword().length==0) {
            // Checking for empty field
            JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
        } else {
            String user = emailTextField.getText();   // Collecting the input
            char[] pass = passwordField.getPassword(); // Collecting the input
            String pwd = String.copyValueOf(pass);  // converting from array to string


            if(validate_login(user,pwd)) {
                getUserInfoFormDB();
                DisplayPanel.getDisplayPanel().getCards().show(DisplayPanel.getDisplayPanel(), "mainPanel");
            } else {
                JOptionPane.showMessageDialog(null, "Incorrect Login Credentials");
            }
        }
    }

    private boolean validate_login(String email,String password) {
        try{
            PreparedStatement pst = _connection.prepareStatement("Select * from user_table where email = ? and password = ?");
            pst.setString(1, email);
            pst.setString(2, password);
            ResultSet rs = pst.executeQuery();

            if(rs.next())
                return true;
            else
                return false;
        } catch(Exception e){
            e.printStackTrace();
            return false;
        }
    }

    private void getUserInfoFormDB() {
        try {
            PreparedStatement loginUser = _connection.prepareStatement("SELECT * FROM soSafeDB.user_table WHERE email = '" + emailTextField.getText() +  "'");
            ResultSet rs = loginUser.executeQuery();
            while (rs.next()) {
                String firstName = rs.getString("first_name");
                String lastName = rs.getString("last_name");
                String phoneNumber = rs.getString("phone_number");
                String masterCode = rs.getString("master_code");
                int userId = rs.getInt("user_id");
                String email = rs.getString("email");
                String address = rs.getString("address");

                user.setAddress(address);
                user.setFirstName(firstName);
                user.setLastName(lastName);
                user.setPhoneNumber(phoneNumber);
                user.setEmail(email);
                user.setMasterPassword(masterCode);
                user.setID(userId);
            }

        } catch(Exception e){
            e.printStackTrace();
        }
    }

    User user;
    private Connection _connection;
    // Variables declaration - do not modify
    private javax.swing.JButton signUpButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton signInButton;
    // End of variables declaration

}